{
  "entries": [
    {
      "id": "1",
      "title": "Lenguajes de marcas y su integración en el desarrollo web",
      "excerpt": "Introducción a los lenguajes de marcado, su clasificación (presentación, procedimientos y descriptivos) y su papel dentro del desarrollo web.",
      "content": "Lenguajes de marcas y su integración en el desarrollo web\n\n¿Qué es un lenguaje de marcas?\n\nUn lenguaje de marcas (o lenguaje de marcado) es un sistema de notación para representar datos de forma estructurada mediante etiquetas dentro del contenido. Dichas etiquetas añaden información adicional —tanto para la comprensión humana como para el procesamiento por programas— y suelen delimitarse con símbolos como <, >, :, -, etc.\n\nEn general, un lenguaje de marcas define estructura, tipo, atributos, relaciones e incluso la presentación o el significado de los datos.\n\nClasificación de los Lenguajes de Marcas\n\n1. Lenguajes de Presentación\n\n¿Qué son?\n\nLenguajes cuyo propósito principal es definir cómo se muestra el contenido (presentación visual o estética). Las etiquetas no se visualizan al usuario final: este ve directamente el contenido ya formateado.\n\nCaracterísticas principales:\n\n- Ocultan las etiquetas al usuario final, mostrando solo el contenido formateado.\n\n- Se centran en especificar elementos visuales como fuente, tamaño, color o posición.\n\n- No describen significado ni estructura semántica, únicamente la apariencia.\n\n2. Lenguajes de Procedimientos\n\n¿Qué son?\n\nTambién orientados a la presentación visual, pero sus etiquetas indican acciones o instrucciones que deben ejecutarse al interpretar el documento.\n\nCaracterísticas principales:\n\n- Las etiquetas provocan acciones o comportamientos específicos (cargar imágenes, reproducir multimedia, enlazar documentos, ejecutar comandos, etc.).\n\n- Mezclan formato visual con instrucciones de interacción.\n\n- Están estrechamente ligados a la aplicación que procesa y muestra el contenido.\n\n3. Lenguajes Descriptivos o Semánticos\n\n¿Qué son?\n\nLenguajes que describen la estructura o el significado del contenido sin dictar cómo debe visualizarse. Priorizan la organización lógica de los datos para facilitar su interpretación por programas.\n\nCaracterísticas principales:\n\n- Las etiquetas describen la naturaleza y la estructura de los datos, no su apariencia.\n\n- Favorecen el procesamiento automático por aplicaciones.\n\n- Facilitan la interoperabilidad y el intercambio estructurado de información entre sistemas.\n",
      "image": "https://kinsta.com/es/wp-content/uploads/sites/8/2020/01/editores-html-gratuitos.jpg",
      "imageCaption": "Lenguajes de marcado",
      "secondaryImage": "https://kinsta.com/es/wp-content/uploads/sites/8/2021/12/aprender-html.png",
      "secondaryImageCaption": "Permiten un procesamiento automático sencillo",
      "audio": "/audio/leguajes.mp4",
      "videos": ["nO9KycWFClM", "3CZCV5-HVRg", "QHDdGBivwA8"],
      "categories": ["Desarrollo Web", "Lenguajes de Marcado", "Tecnología"],
      "references": []
    },       
    {
      "id": "2",
      "title": "Rich Text Format (RTF)",
      "excerpt": "Formato de texto enriquecido desarrollado por Microsoft para intercambio de documentos con formato entre diferentes plataformas.",
      "content": "Rich Text Format (RTF)\n\nDefinición\n\nRTF es un formato de archivo desarrollado por Microsoft en 1987, diseñado para permitir el intercambio de documentos de texto con formato entre diferentes procesadores de texto y sistemas operativos. Este formato utiliza una sintaxis basada en texto plano que incorpora códigos de control para representar elementos de formato como negrita, cursiva, tamaños de fuente, colores y otros estilos. Su principal objetivo es garantizar la portabilidad y la preservación del formato básico del texto a través de diversas plataformas.\n\nCaracterísticas\n\n- Portabilidad: RTF es ampliamente compatible con numerosos procesadores de texto en diferentes sistemas operativos, facilitando el intercambio de documentos sin pérdida significativa de formato.\n\n- Formato basado en texto plano: los archivos RTF son legibles en editores de texto simples, ya que su estructura se basa en texto plano con códigos de control.\n\n- Soporte de formato básico: permite aplicar estilos como negrita, cursiva, subrayado, alineaciones, listas y tablas simples.\n\n- Inclusión de imágenes y objetos: es posible insertar imágenes y objetos OLE, aunque la compatibilidad puede variar según la aplicación utilizada.\n\n- Independencia de plataforma: diseñado para ser independiente del hardware y del sistema operativo, lo que facilita su uso en entornos heterogéneos.\n\nOrigen\n\nRTF fue desarrollado por Microsoft en 1987 como parte de su estrategia para facilitar el intercambio de documentos entre diferentes aplicaciones y sistemas operativos.\n\nUso y aplicaciones\n\n- Intercambio de documentos: facilita el intercambio de documentos entre diferentes procesadores de texto sin pérdida significativa de formato.\n\n- Compatibilidad con sistemas antiguos: útil en entornos donde se requiere compatibilidad con versiones antiguas de software.\n\n- Documentación técnica y educativa: debido a su simplicidad y legibilidad, se emplea en la creación de manuales y documentos educativos.\n\n- Aplicaciones de software: algunas aplicaciones utilizan RTF para generar informes o documentos que requieren formato básico.",
      "image": "https://lh7-us.googleusercontent.com/t8j3nypEBaGGUma6cuvX_UXZe1zrVBWIYQhb_PImjuKehDprNj9210oZa3o3rhCel_-31dqEQDXPtufPjW1I7uK4PMF7ekNKmDtO2lEdrEyblzXGKpEpr9GBSYLFMur28K4OXIZF8wSM6MyMKK4UILxeQFfdedQLUq-r85Fp_w7PF5AWpBIPUHerXOisEw",
      "imageCaption": "Intercambio de documentos con formato enriquecido en RTF",
      "secondaryImage": "https://www.hubspot.com/hubfs/how-to-start-coding-1.jpg",
      "secondaryImageCaption": "Código de control RTF aplicado a texto",
      "audio": "/audio/rtf.mp3",
      "videos": ["lYGL7Gi50OY", "_e0R0VJvb90", "BtpCaZF3RlE"],
      "categories": ["Formatos de Archivo", "Documentos", "Microsoft"],
      "references": []
    },
    {
      "id": "3",
      "title": "TeX",
      "excerpt": "Sistema de composición tipográfica desarrollado por Donald E. Knuth para obtener alta calidad en textos científicos y técnicos.",
      "content": "TeX\n\nDefinición\n\nTeX es un lenguaje de marcas y un sistema de composición tipográfica creado por el matemático e informático Donald E. Knuth en 1978. Su objetivo principal es permitir la creación de documentos con una alta calidad tipográfica, especialmente aquellos que contienen fórmulas matemáticas complejas. TeX se basa en comandos que controlan la disposición y el formato del texto, proporcionando un control preciso sobre la presentación del documento final.\n\nCaracterísticas\n\n- Alta calidad tipográfica: TeX produce documentos con una calidad tipográfica que cumple con los estándares de publicaciones científicas y técnicas.\n\n- Precisión en la composición: permite un control detallado sobre la disposición del texto, incluyendo espaciado, interlineado y justificación.\n\n- Soporte para matemáticas: ofrece una capacidad excepcional para la composición de fórmulas y expresiones matemáticas complejas.\n\n- Portabilidad: los documentos TeX son independientes de la plataforma, lo que garantiza una presentación consistente en diferentes sistemas.\n\n- Extensibilidad: es posible crear macros y extensiones para adaptar TeX a necesidades específicas.\n\nUso y aplicaciones\n\nLaTeX es ampliamente utilizado en:\n\n- Publicaciones científicas y técnicas.\n\n- Tesis y disertaciones académicas.\n\n- Presentaciones (mediante la clase beamer).\n\n- Currículos y cartas formales.\n\n- Documentación técnica y manuales de usuario.",
      "image": "https://media.wired.com/photos/669846f926dff233a54ff10c/4:3/w_2400,h_1800,c_limit/AI-Coding-Agents-Fast-Forward-Business.jpg",
      "imageCaption": "Control tipográfico preciso mediante TeX",
      "secondaryImage": "https://www.hostinger.com/tutorials/wp-content/uploads/sites/2/2021/08/learn-coding-online-for-free.webp",
      "secondaryImageCaption": "Macros y comandos de LaTeX para la composición",
      "audio": "/audio/TeX.m4a",
      "videos": ["ydOTMQC7np0", "oSigbWpcoI8", "p5Yr0dkrKG8"],
      "categories": ["Tipografía", "Publicaciones Científicas", "Donald Knuth"],
      "references": []
    },
    {
      "id": "4",
      "title": "HTML (HyperText Markup Language)",
      "excerpt": "Lenguaje de marcado estándar para crear y estructurar páginas web, base del desarrollo front-end.",
      "content": "HTML (HyperText Markup Language)\n\nDefinición\n\nHTML es el lenguaje de marcado estándar utilizado para crear y estructurar páginas web. A través de una serie de elementos y etiquetas, HTML permite definir la estructura básica de una página, incluyendo encabezados, párrafos, listas, enlaces, imágenes y otros contenidos multimedia.\n\nCaracterísticas\n\n- Estructura jerárquica: HTML organiza el contenido en una estructura jerárquica utilizando elementos anidados.\n\n- Etiquetas semánticas: incluye etiquetas que describen el significado del contenido, como <article>, <section>, <header> o <footer>.\n\n- Independencia de plataforma: los documentos HTML pueden visualizarse en cualquier navegador web, independientemente del sistema operativo.\n\n- Extensibilidad: HTML puede integrarse con CSS y JavaScript para mejorar la presentación y funcionalidad de las páginas.\n\n- Accesibilidad: permite crear contenido accesible para personas con discapacidades mediante el uso adecuado de etiquetas y atributos.\n\nUso y aplicaciones\n\n- Desarrollo de sitios web: base para la creación de páginas web estáticas y dinámicas.\n\n- Aplicaciones web: en combinación con otros lenguajes, HTML sirve para desarrollar aplicaciones accesibles desde navegadores.\n\n- Correos electrónicos: muchos correos utilizan HTML para mejorar su presentación.\n\n- Documentación técnica: permite crear manuales y documentos accesibles en línea.",
      "image": "https://www.hubspot.com/hubfs/how-to-start-coding-1.jpg",
      "imageCaption": "Estructura semántica de un documento HTML5",
      "secondaryImage": "/img/html.png",
      "secondaryImageCaption": "Uso de etiquetas semánticas en HTML",
      "audio": "/audio/html.mp3",
      "videos": ["pQN-pnXPaVg", "kUMe1FH4CHE", "PlxWf493en4"],
      "categories": ["Desarrollo Web", "Front-end", "Marcas"],
      "references": []
    },
    {
      "id": "5",
      "title": "SVG (Scalable Vector Graphics)",
      "excerpt": "Lenguaje de marcado basado en XML para describir gráficos vectoriales escalables sin pérdida de calidad.",
      "content": "SVG (Scalable Vector Graphics)\n\nDefinición\n\nSVG es un lenguaje de marcado basado en XML que permite describir gráficos vectoriales bidimensionales. A diferencia de los formatos rasterizados como JPEG o PNG, SVG define las imágenes mediante formas geométricas, lo que permite escalarlas sin pérdida de calidad.\n\nCaracterísticas\n\n- Escalabilidad: las imágenes SVG pueden ampliarse o reducirse sin perder calidad.\n\n- Interactividad y animación: SVG permite agregar interactividad y animaciones mediante JavaScript o SMIL.\n\n- Accesibilidad: al estar basado en texto, los gráficos SVG pueden indexarse y ser accesibles para tecnologías de asistencia.\n\n- Compatibilidad: es compatible con CSS para estilos y con JavaScript para interactividad.\n\n- Ligereza: los archivos SVG suelen ser más ligeros que las imágenes rasterizadas para gráficos simples.",
      "image": "https://www.21kschool.com/ng/wp-content/uploads/sites/28/2024/02/Learn-to-code-4-reasons-why-your-child-should-do-it.png",
      "imageCaption": "Definición de vectores escalables con SVG",
      "secondaryImage": "/img/sgv.png",
      "secondaryImageCaption": "Animaciones y gráficos dinámicos en SVG",
      "audio": "",
      "videos": ["hZYaSGUbMds", "ZJSCl6XEdP8", "emFMHH2Bfvo"],
      "categories": ["Gráficos Vectoriales", "XML", "Web"],
      "references": []
    },
    {
      "id": "6",
      "title": "XML (Extensible Markup Language)",
      "excerpt": "Lenguaje de marcado extensible para definir y almacenar datos de forma estructurada y legible.",
      "content": "XML (Extensible Markup Language)\n\nDefinición\n\nXML es un lenguaje de marcado desarrollado por el W3C que permite definir y almacenar datos de forma estructurada y legible tanto por humanos como por máquinas. A diferencia de HTML, XML no tiene etiquetas predefinidas, lo que permite a los usuarios crear sus propias etiquetas para describir los datos de manera personalizada.\n\nCaracterísticas\n\n- Extensibilidad: los usuarios pueden definir sus propias etiquetas y estructuras.\n\n- Legibilidad: los documentos XML son legibles por humanos y máquinas.\n\n- Estructura jerárquica: datos organizados en un árbol con un elemento raíz.\n\n- Validación: uso de DTD o XSD para validar estructura y contenido.\n\n- Independencia de plataforma: facilita el intercambio entre sistemas heterogéneos.\n\nUso y aplicaciones\n\n- Intercambio de datos entre sistemas.\n\n- Configuración de aplicaciones.\n\n- Servicios web (SOAP).\n\n- Documentación técnica.\n\n- Almacenamiento en bases de datos XML.",
      "image": "https://cdn.hashnode.com/res/hashnode/image/upload/v1714589655883/ce0b34df-283b-4ab2-8773-bf8aeb8a9f3e.png",
      "imageCaption": "Flexibilidad de etiquetas personalizadas en XML",
      "secondaryImage": "https://www.kindpng.com/picc/m/367-3679723_xml-xml-logo-hd-png-download.png",
      "secondaryImageCaption": "Estructura de árbol y validación en XML",
      "audio": "/audio/xml.mp3",
      "videos": ["BM1qt2_1vdo", "SKOVdy5fGMM", "AZihBEg8VBk"],
      "categories": ["Datos Estructurados", "W3C", "Intercambio de Datos"],
      "references": []
    },
    {
      "id": "7",
      "title": "JSON (JavaScript Object Notation)",
      "excerpt": "Formato de texto ligero para el intercambio de datos con sintaxis clara de pares clave-valor.",
      "content": "JSON (JavaScript Object Notation)\n\nDefinición\n\nJSON es un formato de texto ligero para intercambio de datos, con sintaxis fácil de leer y escribir para humanos y de analizar para máquinas. Aunque deriva de JavaScript, JSON es independiente del lenguaje y se ha convertido en un estándar de facto en APIs web.\n\nCaracterísticas\n\n- Ligero y eficiente: reduce el tamaño de los datos transmitidos.\n\n- Legible: sintaxis clara de pares clave-valor.\n\n- Independiente de lenguaje: usado en Python, Java, C#, etc.\n\n- Estructura jerárquica basada en objetos y arreglos.\n\n- Amplio soporte en lenguajes modernos.\n\nOrigen\n\nDesarrollado por Douglas Crockford a principios de los 2000 para simplificar XML.\n\nUso y aplicaciones\n\n- APIs RESTful.\n\n- Configuración de aplicaciones.\n\n- Bases de datos NoSQL (MongoDB).\n\n- Sincronización en móviles.\n\n- Microservicios.",
      "image": "https://www.liblogo.com/lib/json-logo.svg",
      "imageCaption": "Notación de pares clave-valor en JSON",
      "secondaryImage": "https://static.vecteezy.com/system/resources/previews/002/188/387/non_2x/json-file-vector.jpg",
      "secondaryImageCaption": "Estructura jerárquica de objetos y arreglos",
      "audio": "",
      "videos": ["YYfediyCwAU", "oVuYDKWvomk", "LJzDHKPLWYw"],
      "categories": ["APIs", "NoSQL", "Intercambio de Datos"],
      "references": []
    },
    {
      "id": "8",
      "title": "XHTML (eXtensible HyperText Markup Language)",
      "excerpt": "Versión de HTML basada en XML con sintaxis estricta para mejorar interoperabilidad y estructura.",
      "content": "XHTML (eXtensible HyperText Markup Language)\n\nDefinición\n\nXHTML combina la flexibilidad de HTML con la sintaxis y extensibilidad de XML. Es un estándar W3C que exige documentos bien formados: etiquetas anidadas y cerradas, atributos entre comillas.\n\nCaracterísticas\n\n- Basado en XML: documentos bien formados.\n\n- Sintaxis estricta: requiere cierre y anidamiento correcto.\n\n- Extensibilidad: integración con otros lenguajes XML.\n\n- Modularidad: uso de módulos para diferentes necesidades.\n\n- Separación de contenido y presentación (XHTML + CSS).\n\nOrigen\n\nPublicación oficial en enero de 2000 por el W3C.\n\nUso y aplicaciones\n\n- Páginas web con estructura rigurosa.\n\n- XHTML Basic y Mobile Profile en dispositivos limitados.\n\n- Integración con SVG y MathML.\n\n- Enriquecimiento semántico con XHTML+RDFa.",
      "image": "https://www.svgrepo.com/show/22564/xhtml-file-format-variant.svg",
      "imageCaption": "Sintaxis estricta y anidamiento en XHTML",
      "secondaryImage": "https://cdn.vecteezy.com/system/resources/previews/000/163/940/original/xhtml-file-format-line-icon-vector.jpg",
      "secondaryImageCaption": "Modularidad y compatibilidad XML en XHTML",
      "audio": "/audio/xhtml.m4a",
      "videos": ["O32o6jdvGF4", "qYlpu5wpSak", "BFg6Jwcf6-4"],
      "categories": ["Web Semántica", "XML", "Accesibilidad"],
      "references": []
    },
    {
      "id": "9",
      "title": "MathML (Mathematical Markup Language)",
      "excerpt": "Lenguaje XML para describir notación matemática y capturar su estructura y semántica.",
      "content": "MathML (Mathematical Markup Language)\n\nDefinición\n\nMathML es un lenguaje de marcado basado en XML diseñado para describir notación matemática, capturando tanto presentación como semántica.\n\nCaracterísticas\n\n- Basado en XML: integración fluida con HTML5.\n\n- Presentation MathML: controla la apariencia visual.\n\n- Content MathML: captura el significado semántico.\n\n- Extensible: admite nuevas necesidades y objetos matemáticos.\n\n- Interoperabilidad: facilita intercambio entre sistemas.\n\nOrigen\n\nRecomendado por el W3C en 1998, evolucionando hasta la versión 4.0.\n\nUso y aplicaciones\n\n- Educación: materiales didácticos online.\n\n- Publicaciones: artículos académicos con fórmulas precisas.\n\n- Web: integración de contenido matemático accesible.\n\n- Software: intercambio de datos entre sistemas de álgebra.\n",
      "image": "https://www.21kschool.com/ph/wp-content/uploads/sites/26/2023/07/Coding.png",
      "imageCaption": "Notación de expresiones matemáticas en MathML",
      "secondaryImage": "https://www.researchgate.net/publication/220390219/figure/fig1/AS:668968561946637@1536505942956/An-example-of-Presentation-MathML-encoding-of-a-simple-mathematical-equation.png",
      "secondaryImageCaption": "Distinción entre Presentation y Content MathML",
      "audio": "/audio/MathML.m4a",
      "videos": ["gAux-vNEuIU", "5vEF1gHNKzw", "9h7mMFFWer0"],
      "categories": ["Educación", "Publicaciones Científicas", "Web"],
      "references": []
    },
    {
      "id": "10",
      "title": "Markdown",
      "excerpt": "Lenguaje de marcado ligero para escribir texto plano que se convierte fácilmente a HTML.",
      "content": "Markdown\n\nDefinición\n\nMarkdown es un lenguaje ligero creado en 2004 por John Gruber y Aaron Swartz, para escribir texto plano legible que se transforma en HTML válido.\n\nCaracterísticas\n\n- Sintaxis mínima: usa caracteres como asteriscos, guiones y almohadillas.\n\n- Conversión a HTML: ideal para contenido web.\n\n- Legibilidad: archivos .md legibles sin procesamiento.\n\n- Portabilidad: texto plano compatible con múltiples plataformas.\n\n- Extensiones: GitHub Flavored Markdown, R Markdown, CommonMark.\n\nOrigen\n\nDesarrollado para simplificar la redacción y publicación de contenido en la web.\n\nUso y aplicaciones\n\n- Documentación técnica (README.md).\n\n- Blogs y generadores estáticos (Jekyll, Hugo).\n\n- Notas y sistemas de gestión de conocimiento (Obsidian, Notion).\n\n- Educación: Jupyter Notebooks.\n\n- Colaboración: GitHub, Stack Overflow.",
      "image": "https://www.goodcore.co.uk/blog/wp-content/uploads/2019/08/coding-vs-programming-2.jpg",
      "imageCaption": "Conversión sencilla de texto plano a HTML en Markdown",
      "secondaryImage": "https://www.helpndoc.com/img/news/generate-markdown-documents-improved-pdf-rendering-and-new-force-page-break-option-in-helpndoc-7.2/markdown-documentation-generation.png",
      "secondaryImageCaption": "Sintaxis mínima y legible de Markdown",
      "audio": "/audio/Markdown.m4a",
      "videos": ["FlsoBiteuPM", "ntT7wDaNX2E", "_hI14xuvQag"],
      "categories": ["Documentación", "Blogs", "Educación"],
      "references": []
    }
  ]
}